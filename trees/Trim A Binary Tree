Given a binary search tree and the lowest and highest boundaries as L and R, 
trim the tree so that all its elements lies in [L, R] (R >= L).

Sol: When \text{node.val > R}node.val > R, we know that the trimmed binary tree must occur to the left of the node. 
Similarly, when \text{node.val < L}node.val < L, the trimmed binary tree occurs to the right of the node. 
Otherwise, we will trim both sides of the tree.



class Solution {
    public TreeNode trimBST(TreeNode root, int L, int R) {
        if(root == null) return root;
        
        if(root.val > R) return trimBST(root.left, L, R);
        if(root.val < L) return trimBST(root.right, L, R);
        
        root.left = trimBST(root.left, L, R);
        root.right= trimBST(root.right, L, R);
        
        return root;
    }
}
