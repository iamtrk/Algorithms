class Solution {
    public int[] searchRange(int[] nums, int target) {
        int[] result = new int[2];
        result[0] = first(nums, 0, nums.length-1, target);
        result[1] = end(nums, 0, nums.length-1, target);
        
        return result;
    }
    
    public int first(int[] nums, int lo, int hi, int target) {
        if(lo>hi) return -1;
        int mid = lo + (hi-lo)/2;
        
        if(nums[mid]==target && (mid==0 || nums[mid-1]<nums[mid])) {
            return mid;
        } else if(nums[mid]<target) {
            return first(nums, mid+1, hi, target);
        } else {
            return first(nums, lo, mid-1, target);
        }
        
    }
    
    public int end(int[] nums, int lo, int hi, int target) {
        if(lo>hi) return -1;
        int mid = lo + (hi-lo)/2;
        
        if(nums[mid]==target && (mid==hi || nums[mid]<nums[mid+1])) {
            return mid;
        } else if(nums[mid]>target) {
            return end(nums, lo, mid-1, target);
        } else {
            return end(nums, mid+1, hi, target);
        }
    }
}
