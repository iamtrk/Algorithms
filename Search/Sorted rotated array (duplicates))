class Solution {
    public boolean search(int[] nums, int target) {
        return search(nums, target, 0, nums.length-1);
    }
    
    public boolean search(int[] nums, int target, int lo, int hi) {
        
        int mid = lo + (hi-lo)/2;
        
        if(lo>hi) return false;
              
        if(nums[mid]==target) {
            return true;
        }
        // Check the conditions
        if(nums[lo]==nums[mid] && nums[mid]==nums[hi]) {
            return search(nums, target, lo, mid-1) || search(nums, target, mid+1, hi);
        } else if(nums[lo]<=nums[mid]) {
            if(nums[lo]<=target && nums[mid]>target) {
                return search(nums, target, lo, mid-1);
            } else {
                return search(nums, target, mid+1, hi);
            }
        } else if(nums[mid]<=nums[hi]) {
            if(nums[mid]<target && target<=nums[hi]) {
                return search(nums, target, mid+1, hi);
            } else {
                return search(nums, target, lo, mid-1);
            }
        }       
        return false;        
    }
}
